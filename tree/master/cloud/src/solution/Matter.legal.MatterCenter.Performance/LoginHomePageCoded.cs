//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Matter.legal.MatterCenter.Performance
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using JWTokenWebTestPlugin;


    [Priority(0)]
    public class LoginHomePageCoded : WebTest
    {

        private JWTokenWebTestPlugin testPlugin0 = new JWTokenWebTestPlugin();

        public LoginHomePageCoded()
        {
            this.Context.Add("TokenValue", "");
            this.Context.Add("WebServer1", "https://matterwebapp.azurewebsites.net");
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.testPlugin0.ClientId = "";
            this.testPlugin0.AppKey = "";
            this.testPlugin0.TokenValue = "TokenValue";
            this.testPlugin0.Tenant = "";
            this.testPlugin0.AadInstance = "";
            this.testPlugin0.ToDoResourceId = "";
            this.PreWebTest += new EventHandler<PreWebTestEventArgs>(this.testPlugin0.PreWebTest);
            this.PostWebTest += new EventHandler<PostWebTestEventArgs>(this.testPlugin0.PostWebTest);
            this.PreTransaction += new EventHandler<PreTransactionEventArgs>(this.testPlugin0.PreTransaction);
            this.PostTransaction += new EventHandler<PostTransactionEventArgs>(this.testPlugin0.PostTransaction);
            this.PrePage += new EventHandler<PrePageEventArgs>(this.testPlugin0.PrePage);
            this.PostPage += new EventHandler<PostPageEventArgs>(this.testPlugin0.PostPage);
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            this.UserName = "matteradmin@msmatter.onmicrosoft.com";
            this.PreRequestDataBinding += new EventHandler<PreRequestDataBindingEventArgs>(this.testPlugin0.PreRequestDataBinding);
            this.PreRequest += new EventHandler<PreRequestEventArgs>(this.testPlugin0.PreRequest);
            this.PostRequest += new EventHandler<PostRequestEventArgs>(this.testPlugin0.PostRequest);

            WebTestRequest request1 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/api/v1/user/getuserprofilepicture"));
            request1.ThinkTime = -1;
            request1.Timeout = 60;
            request1.Method = "POST";
            request1.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            request1.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            request1.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["TokenValue"].ToString()));
            StringHttpBody request1Body = new StringHttpBody();
            request1Body.ContentType = "application/json";
            request1Body.InsertByteOrderMark = false;
            request1Body.BodyString = "{\"Url\":\"https://msmatter.sharepoint.com\"}";
            request1.Body = request1Body;
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/api/v1/matter/cancreate"));
            request2.ThinkTime = -1;
            request2.Timeout = 60;
            request2.Method = "POST";
            request2.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            request2.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            request2.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["TokenValue"].ToString()));
            StringHttpBody request2Body = new StringHttpBody();
            request2Body.ContentType = "application/json";
            request2Body.InsertByteOrderMark = false;
            request2Body.BodyString = "{\"Url\":\"https://msmatter.sharepoint.com/sites/catalog\"}";
            request2.Body = request2Body;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/api/v1/shared/help"));
            request3.Timeout = 60;
            request3.Method = "POST";
            request3.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            request3.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            request3.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["TokenValue"].ToString()));
            StringHttpBody request3Body = new StringHttpBody();
            request3Body.ContentType = "application/json";
            request3Body.InsertByteOrderMark = false;
            request3Body.BodyString = "{\"Client\":{\"Url\":\"https://msmatter.sharepoint.com/sites/catalog\"},\"SelectedPage\":" +
                "\"2\"}";
            request3.Body = request3Body;
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/api/v1/document/getdocuments"));
            request4.ThinkTime = -2;
            request4.Timeout = 60;
            request4.Method = "POST";
            request4.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            request4.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            request4.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["TokenValue"].ToString()));
            StringHttpBody request4Body = new StringHttpBody();
            request4Body.ContentType = "application/json";
            request4Body.InsertByteOrderMark = false;
            request4Body.BodyString = @"{""Client"":{""Url"":""https://msmatter.sharepoint.com/sites/catalog""},""SearchObject"":{""PageNumber"":1,""ItemsPerPage"":50,""SearchTerm"":"""",""IsUnique"":false,""UniqueColumnName"":"""",""FilterValue"":"""",""Filters"":{""ClientName"":"""",""ClientsList"":[],""PGList"":[],""AOLList"":[],""DateFilters"":{""CreatedFromDate"":"""",""CreatedToDate"":"""",""ModifiedFromDate"":"""",""ModifiedToDate"":"""",""OpenDateFrom"":"""",""OpenDateTo"":""""},""DocumentAuthor"":"""",""DocumentCheckoutUsers"":"""",""FilterByMe"":1,""FromDate"":"""",""Name"":"""",""ResponsibleAttorneys"":"""",""ProjectName"":"""",""SubareaOfLaw"":"""",""ProjectID"":"""",""PracticeGroup"":"""",""ToDate"":""""},""Sort"":{""ByProperty"":""MCModifiedDate"",""Direction"":1,""ByColumn"":""documentModifiedDate""}}}";
            request4.Body = request4Body;
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/fabric-0.6.0/fonts/SegoeUI-SemiLight-final.woff"));
            request5.Timeout = 60;
            request5.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/api/v1/document/getpinneddocuments"));
            request6.ThinkTime = -1;
            request6.Timeout = 60;
            request6.Method = "POST";
            request6.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            request6.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            request6.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["TokenValue"].ToString()));
            StringHttpBody request6Body = new StringHttpBody();
            request6Body.ContentType = "application/json";
            request6Body.InsertByteOrderMark = false;
            request6Body.BodyString = @"{""Client"":{""Url"":""https://msmatter.sharepoint.com/sites/catalog""},""SearchObject"":{""PageNumber"":1,""ItemsPerPage"":50,""SearchTerm"":"""",""IsUnique"":false,""UniqueColumnName"":"""",""FilterValue"":"""",""Filters"":{""ClientName"":"""",""ClientsList"":[],""PGList"":[],""AOLList"":[],""DateFilters"":{""CreatedFromDate"":"""",""CreatedToDate"":"""",""ModifiedFromDate"":"""",""ModifiedToDate"":"""",""OpenDateFrom"":"""",""OpenDateTo"":""""},""DocumentAuthor"":"""",""DocumentCheckoutUsers"":"""",""FilterByMe"":1,""FromDate"":"""",""Name"":"""",""ResponsibleAttorneys"":"""",""ProjectName"":"""",""SubareaOfLaw"":"""",""ProjectID"":"""",""PracticeGroup"":"""",""ToDate"":""""},""Sort"":{""ByProperty"":""MCModifiedDate"",""Direction"":1,""ByColumn"":""documentModifiedDate"",""SortAndFilterPinnedData"":false}}}";
            request6.Body = request6Body;
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/cellCheckboxTemplate.html"));
            request7.Timeout = 60;
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/headerCheckboxTemplate.html"));
            request8.Timeout = 60;
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/DocumentCellTemplate.html"));
            request9.Timeout = 60;
            yield return request9;
            request9 = null;

            WebTestRequest request10 = new WebTestRequest("https://matterwebapp.azurewebsites.net/app/document/DocumentTemplates/%7B%7Brow.e" +
                    "ntity.documentIconUrl%7D%7D");
            yield return request10;
            request10 = null;

            WebTestRequest request11 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/DocumentHeaderTemplate.html"));
            request11.Timeout = 60;
            yield return request11;
            request11 = null;

            WebTestRequest request12 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/ClientHeaderTemplate.html"));
            request12.Timeout = 60;
            yield return request12;
            request12 = null;

            WebTestRequest request13 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/ModifiedDateHeaderTemplate.html"));
            request13.Timeout = 60;
            yield return request13;
            request13 = null;

            WebTestRequest request14 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/AuthorHeaderTemplate.html"));
            request14.Timeout = 60;
            yield return request14;
            request14 = null;

            WebTestRequest request15 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/CheckOutHeaderTemplate.html"));
            request15.Timeout = 60;
            yield return request15;
            request15 = null;

            WebTestRequest request16 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/app/document/DocumentTemplates/CreatedDateHeaderTemplate.html"));
            request16.Timeout = 60;
            yield return request16;
            request16 = null;

            WebTestRequest request17 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/%7B%7Brow.entity.documentIconUrl%7D%7D"));
            request17.Timeout = 60;
            yield return request17;
            request17 = null;

            WebTestRequest request18 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/fabric-0.6.0/fonts/SegoeUI-Regular-final.woff"));
            request18.Timeout = 60;
            request18.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            yield return request18;
            request18 = null;

            WebTestRequest request19 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/fabric-0.6.0/fonts/office365icons.woff"));
            request19.Timeout = 60;
            request19.Headers.Add(new WebTestRequestHeader("Origin", this.Context["WebServer1"].ToString()));
            yield return request19;
            request19 = null;

            WebTestRequest request20 = new WebTestRequest((this.Context["WebServer1"].ToString() + "/"));
            yield return request20;
            request20 = null;
        }
    }
}
